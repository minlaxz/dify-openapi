openapi: 3.0.0
info:
  title: Knowledge API
  version: 1.0.0
  description: API for managing knowledge bases, documents, and document segments
servers:
  - url: https://api-dify-selfhosted.engineerforce.io/v1
    description: Base API URL
security:
  - APIKeyAuth: []
components:
  securitySchemes:
    APIKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Use `Bearer {API_KEY}` for authentication
  parameters:
    datasetId:
      name: dataset_id
      in: path
      required: true
      schema:
        type: string
      description: Knowledge ID
    documentId:
      name: document_id
      in: path
      required: true
      schema:
        type: string
      description: Document ID
    segmentId:
      name: segment_id
      in: path
      required: true
      schema:
        type: string
      description: Segment ID
    batch:
      name: batch
      in: path
      required: true
      schema:
        type: string
      description: Batch number of uploaded documents
  schemas:
    Dataset:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        provider:
          type: string
        permission:
          type: string
        data_source_type:
          type: string
          nullable: true
        indexing_technique:
          type: string
          nullable: true
        app_count:
          type: integer
        document_count:
          type: integer
        word_count:
          type: integer
        created_by:
          type: string
        created_at:
          type: integer
        updated_by:
          type: string
        updated_at:
          type: integer
        embedding_model:
          type: string
          nullable: true
        embedding_model_provider:
          type: string
          nullable: true
        embedding_available:
          type: boolean
          nullable: true
        retrieval_model_dict:
          $ref: '#/components/schemas/RetrievalModel'
        tags:
          type: array
          items:
            type: string
        doc_form:
          type: string
          nullable: true
        external_knowledge_info:
          type: object
          properties:
            external_knowledge_id:
              type: string
              nullable: true
            external_knowledge_api_id:
              type: string
              nullable: true
            external_knowledge_api_name:
              type: string
              nullable: true
            external_knowledge_api_endpoint:
              type: string
              nullable: true
        external_retrieval_model:
          type: object
          properties:
            top_k:
              type: integer
            score_threshold:
              type: number
            score_threshold_enabled:
              type: boolean
              nullable: true
        partial_member_list:
          type: array
          items:
            type: string
    Document:
      type: object
      properties:
        id:
          type: string
        position:
          type: integer
        data_source_type:
          type: string
        data_source_info:
          type: object
          properties:
            upload_file_id:
              type: string
        dataset_process_rule_id:
          type: string
        name:
          type: string
        created_from:
          type: string
        created_by:
          type: string
        created_at:
          type: integer
        tokens:
          type: integer
        indexing_status:
          type: string
        error:
          type: string
          nullable: true
        enabled:
          type: boolean
        disabled_at:
          type: string
          nullable: true
        disabled_by:
          type: string
          nullable: true
        archived:
          type: boolean
        display_status:
          type: string
        word_count:
          type: integer
        hit_count:
          type: integer
        doc_form:
          type: string
    Segment:
      type: object
      properties:
        id:
          type: string
        position:
          type: integer
        document_id:
          type: string
        content:
          type: string
        answer:
          type: string
          nullable: true
        word_count:
          type: integer
        tokens:
          type: integer
        keywords:
          type: array
          items:
            type: string
        index_node_id:
          type: string
        index_node_hash:
          type: string
        hit_count:
          type: integer
        enabled:
          type: boolean
        disabled_at:
          type: string
          nullable: true
        disabled_by:
          type: string
          nullable: true
        status:
          type: string
        created_by:
          type: string
        created_at:
          type: integer
        indexing_at:
          type: integer
        completed_at:
          type: integer
        error:
          type: string
          nullable: true
        stopped_at:
          type: string
          nullable: true
    ChildChunk:
      type: object
      properties:
        id:
          type: string
        segment_id:
          type: string
        content:
          type: string
        word_count:
          type: integer
        tokens:
          type: integer
        index_node_id:
          type: string
        index_node_hash:
          type: string
        status:
          type: string
        created_by:
          type: string
        created_at:
          type: integer
        indexing_at:
          type: integer
        completed_at:
          type: integer
        error:
          type: string
          nullable: true
        stopped_at:
          type: string
          nullable: true
    ProcessRule:
      type: object
      properties:
        mode:
          type: string
          enum: [automatic, custom, hierarchical]
        rules:
          type: object
          properties:
            pre_processing_rules:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    enum: [remove_extra_spaces, remove_urls_emails]
                  enabled:
                    type: boolean
            segmentation:
              type: object
              properties:
                separator:
                  type: string
                max_tokens:
                  type: integer
            parent_mode:
              type: string
              enum: [full-doc, paragraph]
            subchunk_segmentation:
              type: object
              properties:
                separator:
                  type: string
                max_tokens:
                  type: integer
                chunk_overlap:
                  type: integer
    RetrievalModel:
      type: object
      properties:
        search_method:
          type: string
          enum: [hybrid_search, semantic_search, full_text_search, keyword_search]
        reranking_enable:
          type: boolean
        reranking_mode:
          type: object
          properties:
            reranking_provider_name:
              type: string
            reranking_model_name:
              type: string
        weights:
          type: number
        top_k:
          type: integer
        score_threshold_enabled:
          type: boolean
        score_threshold:
          type: number
        metadata_filtering_conditions:
          type: object
          properties:
            logical_operator:
              type: string
              enum: [and, or]
            conditions:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  comparison_operator:
                    type: string
                    enum: [contains, "not contains", "start with", "end with", is, "is not", empty, "not empty", "=", "≠", ">", "<", "≥", "≤", before, after]
                  value:
                    type: string
    Error:
      type: object
      properties:
        code:
          type: string
        status:
          type: integer
        message:
          type: string
paths:
  /datasets/{dataset_id}/document/create-by-text:
    post:
      tags: [Documents]
      summary: Create a Document from Text
      parameters:
        - $ref: '#/components/parameters/datasetId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Document name
                text:
                  type: string
                  description: Document content
                indexing_technique:
                  type: string
                  enum: [high_quality, economy]
                  description: Index mode
                doc_form:
                  type: string
                  enum: [text_model, hierarchical_model, qa_model]
                  description: Format of indexed content
                doc_language:
                  type: string
                  description: In Q&A mode, specify the language of the document
                process_rule:
                  $ref: '#/components/schemas/ProcessRule'
                retrieval_model:
                  $ref: '#/components/schemas/RetrievalModel'
                embedding_model:
                  type: string
                  description: Embedding model name
                embedding_model_provider:
                  type: string
                  description: Embedding model provider
              required:
                - name
                - text
      responses:
        '200':
          description: Document created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  document:
                    $ref: '#/components/schemas/Document'
                  batch:
                    type: string
  /datasets/{dataset_id}/document/create-by-file:
    post:
      tags: [Documents]
      summary: Create a Document from a File
      parameters:
        - $ref: '#/components/parameters/datasetId'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: JSON string containing document metadata
                file:
                  type: string
                  format: binary
                  description: File to upload
      responses:
        '200':
          description: Document created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  document:
                    $ref: '#/components/schemas/Document'
                  batch:
                    type: string
  /datasets:
    post:
      tags: [Datasets]
      summary: Create an Empty Knowledge Base
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Knowledge name
                description:
                  type: string
                  description: Knowledge description
                indexing_technique:
                  type: string
                  enum: [high_quality, economy]
                  description: Index technique
                permission:
                  type: string
                  enum: [only_me, all_team_members, partial_members]
                  description: Permission
                provider:
                  type: string
                  enum: [vendor, external]
                  description: Provider
                external_knowledge_api_id:
                  type: string
                  description: External knowledge API ID
                external_knowledge_id:
                  type: string
                  description: External knowledge ID
                embedding_model:
                  type: string
                  description: Embedding model name
                embedding_model_provider:
                  type: string
                  description: Embedding model provider name
                retrieval_model:
                  $ref: '#/components/schemas/RetrievalModel'
              required:
                - name
                - permission
      responses:
        '200':
          description: Knowledge base created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
    get:
      tags: [Datasets]
      summary: Get Knowledge Base List
      parameters:
        - name: keyword
          in: query
          description: Search keyword
          schema:
            type: string
        - name: tag_ids
          in: query
          description: Tag ID list
          schema:
            type: array
            items:
              type: string
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of items returned
          schema:
            type: integer
        - name: include_all
          in: query
          description: Whether to include all datasets
          schema:
            type: boolean
      responses:
        '200':
          description: List of knowledge bases
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dataset'
                  has_more:
                    type: boolean
                  limit:
                    type: integer
                  total:
                    type: integer
                  page:
                    type: integer
  /datasets/{dataset_id}:
    get:
      tags: [Datasets]
      summary: Get knowledge base details by knowledge base ID
      parameters:
        - $ref: '#/components/parameters/datasetId'
      responses:
        '200':
          description: Knowledge base details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
    patch:
      tags: [Datasets]
      summary: Update knowledge base
      parameters:
        - $ref: '#/components/parameters/datasetId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Knowledge name
                indexing_technique:
                  type: string
                  enum: [high_quality, economy]
                  description: Index technique
                permission:
                  type: string
                  enum: [only_me, all_team_members, partial_members]
                  description: Permission
                embedding_model_provider:
                  type: string
                  description: Specified embedding model provider
                embedding_model:
                  type: string
                  description: Specified embedding model
                retrieval_model:
                  $ref: '#/components/schemas/RetrievalModel'
                partial_member_list:
                  type: array
                  items:
                    type: string
                  description: Partial member list
      responses:
        '200':
          description: Knowledge base updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
    delete:
      tags: [Datasets]
      summary: Delete a Knowledge Base
      parameters:
        - $ref: '#/components/parameters/datasetId'
      responses:
        '204':
          description: No Content
  /datasets/{dataset_id}/documents:
    get:
      tags: [Documents]
      summary: Get the Document List of a Knowledge Base
      parameters:
        - $ref: '#/components/parameters/datasetId'
        - name: keyword
          in: query
          description: Search keywords
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of items returned
          schema:
            type: integer
      responses:
        '200':
          description: List of documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Document'
                  has_more:
                    type: boolean
                  limit:
                    type: integer
                  total:
                    type: integer
                  page:
                    type: integer
  /datasets/{dataset_id}/documents/status/{action}:
    patch:
      tags: [Documents]
      summary: Update Document Status
      parameters:
        - $ref: '#/components/parameters/datasetId'
        - name: action
          in: path
          required: true
          schema:
            type: string
            enum: [enable, disable, archive, un_archive]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                document_ids:
                  type: array
                  items:
                    type: string
              required:
                - document_ids
      responses:
        '200':
          description: Status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
  /datasets/{dataset_id}/retrieve:
    post:
      tags: [Documents]
      summary: Retrieve Chunks from a Knowledge Base
      parameters:
        - $ref: '#/components/parameters/datasetId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: Query keyword
                retrieval_model:
                  $ref: '#/components/schemas/RetrievalModel'
                external_retrieval_model:
                  type: object
      responses:
        '200':
          description: Retrieved chunks
          content:
            application/json:
              schema:
                type: object
                properties:
                  query:
                    type: object
                    properties:
                      content:
                        type: string
                  records:
                    type: array
                    items:
                      type: object
                      properties:
                        segment:
                          $ref: '#/components/schemas/Segment'
                        score:
                          type: number
                        tsne_position:
                          type: string
                          nullable: true
