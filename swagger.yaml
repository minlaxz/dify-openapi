openapi: 3.0.0
info:
  title: Dify Knowledge Base API
  description: |
    Dify Knowledge Base API provides a series of interfaces for managing knowledge bases, documents, and retrieval functions.
    All API requests require a knowledge base level API-Key in the Authorization HTTP Header.
  version: 1.5.0
servers:
  - url: 'https://api-dify-selfhosted.engineerforce.io/v1'
    description: Dify Self-Hosted API Server
security:
  - bearerApiKeyAuth: []
tags:
  - name: Datasets
    description: Operations for managing knowledge bases
  - name: Documents
    description: Operations for managing documents in knowledge bases
  - name: Segments
    description: Operations for managing document segments
  - name: Models
    description: Operations for retrieving model information
  - name: Metadata
    description: Operations for managing metadata in knowledge bases
  - name: Tags
    description: Operations for managing knowledge base tags
components:
  securitySchemes:
    bearerApiKeyAuth:
      type: http
      scheme: bearer
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        status:
          type: integer
          description: HTTP status code
        message:
          type: string
          description: Error message description
      required:
        - code
        - status
        - message
    Dataset:
      type: object
      properties:
        id:
          type: string
          description: Knowledge Base ID
        name:
          type: string
          description: Knowledge Base name
        description:
          type: string
          nullable: true
          description: Knowledge Base description
        provider:
          type: string
          enum:
            - vendor
            - external
          description: Knowledge Base provider
        permission:
          type: string
          enum:
            - only_me
            - all_team_members
            - partial_members
          description: Access permission
        data_source_type:
          type: string
          nullable: true
          description: Data source type
        indexing_technique:
          type: string
          nullable: true
          enum:
            - high_quality
            - economy
          description: Indexing technique
        app_count:
          type: integer
          description: Number of applications
        document_count:
          type: integer
          description: Number of documents
        word_count:
          type: integer
          description: Word count
        created_by:
          type: string
          description: Creator ID
        created_at:
          type: number
          description: Creation timestamp
        updated_by:
          type: string
          description: Last updated by ID
        updated_at:
          type: number
          description: Last updated timestamp
        embedding_model:
          type: string
          nullable: true
          description: Embedding model name
        embedding_model_provider:
          type: string
          nullable: true
          description: Embedding model provider
        embedding_available:
          type: boolean
          nullable: true
          description: Whether embedding is available
        retrieval_model_dict:
          type: object
          description: Retrieval model configuration
          properties:
            search_method:
              type: string
              description: Search method
            reranking_enable:
              type: boolean
              description: Whether reranking is enabled
            reranking_mode:
              type: string
              nullable: true
              description: Reranking mode
            reranking_model:
              type: object
              description: Reranking model
              properties:
                reranking_provider_name:
                  type: string
                  description: Reranking model provider
                reranking_model_name:
                  type: string
                  description: Reranking model name
            weights:
              type: number
              nullable: true
              description: Weights
            top_k:
              type: integer
              description: Number of results to return
            score_threshold_enabled:
              type: boolean
              description: Whether score threshold is enabled
            score_threshold:
              type: number
              nullable: true
              description: Score threshold
        tags:
          type: array
          description: Tags list
          items:
            type: string
        doc_form:
          type: string
          nullable: true
          description: Document form
        external_knowledge_info:
          type: object
          description: External knowledge information
          properties:
            external_knowledge_id:
              type: string
              nullable: true
              description: External knowledge ID
            external_knowledge_api_id:
              type: string
              nullable: true
              description: External knowledge API ID
            external_knowledge_api_name:
              type: string
              nullable: true
              description: External knowledge API name
            external_knowledge_api_endpoint:
              type: string
              nullable: true
              description: External knowledge API endpoint
        external_retrieval_model:
          type: object
          description: External retrieval model
          properties:
            top_k:
              type: integer
              description: Number of results to return
            score_threshold:
              type: number
              description: Score threshold
            score_threshold_enabled:
              type: boolean
              nullable: true
              description: Whether score threshold is enabled
    DatasetList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
        has_more:
          type: boolean
          description: Whether there is more data
        limit:
          type: integer
          description: Page size limit
        total:
          type: integer
          description: Total record count
        page:
          type: integer
          description: Current page number
    CreateDatasetRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Knowledge Base name (required)
        description:
          type: string
          description: Knowledge Base description (optional)
        indexing_technique:
          type: string
          enum:
            - high_quality
            - economy
          description: |
            Indexing mode (optional, recommended)
            - high_quality: High quality
            - economy: Economy
        permission:
          type: string
          enum:
            - only_me
            - all_team_members
            - partial_members
          default: only_me
          description: |
            Permission (optional, default only_me)
            - only_me: Only me
            - all_team_members: All team members
            - partial_members: Partial team members
        provider:
          type: string
          enum:
            - vendor
            - external
          default: vendor
          description: |
            Provider (optional, default vendor)
            - vendor: Upload files
            - external: External knowledge base
        external_knowledge_api_id:
          type: string
          description: External knowledge API_ID (optional)
        external_knowledge_id:
          type: string
          description: External knowledge ID (optional)
        embedding_model:
          type: string
          description: Embedding model name
        embedding_model_provider:
          type: string
          description: Embedding model provider
        retrieval_model:
          $ref: '#/components/schemas/RetrievalModel'
          description: Retrieval model configuration
    RetrievalModel:
      type: object
      properties:
        search_method:
          type: string
          enum:
            - keyword_search
            - semantic_search
            - full_text_search
            - hybrid_search
          description: |
            Search method:
            - keyword_search: Keyword search
            - semantic_search: Semantic search
            - full_text_search: Full-text search
            - hybrid_search: Hybrid search
        reranking_enable:
          type: boolean
          description: Whether reranking is enabled (optional). Required if search mode is semantic_search or hybrid_search
        reranking_model:
          type: object
          properties:
            reranking_provider_name:
              type: string
              description: Rerank model provider
            reranking_model_name:
              type: string
              description: Rerank model name
          description: Rerank model configuration (optional). Required if reranking is enabled
        weights:
          type: number
          format: float
          description: Weight setting for semantic search in hybrid search mode
        top_k:
          type: integer
          description: Number of results to return (optional)
        score_threshold_enabled:
          type: boolean
          description: Whether score threshold is enabled
        score_threshold:
          type: number
          format: float
          description: Score threshold
        metadata_filtering_conditions:
          $ref: '#/components/schemas/MetadataFilteringConditions'
          description: Metadata filtering conditions
    MetadataFilteringConditions:
      type: object
      description: Metadata filtering conditions
      properties:
        logical_operator:
          type: string
          enum:
            - and
            - or
          description: Logical operator
        conditions:
          type: array
          description: List of conditions
          items:
            $ref: '#/components/schemas/MetadataCondition'
    MetadataCondition:
      type: object
      description: Single metadata filtering condition
      properties:
        name:
          type: string
          description: Metadata field name
        comparison_operator:
          type: string
          enum:
            - contains
            - not contains
            - start with
            - end with
            - is
            - is not
            - empty
            - not empty
            - '='
            - '!='
            - '>'
            - <
            - '>='
            - <=
            - before
            - after
          description: Comparison operator
        value:
          oneOf:
            - type: string
            - type: number
          description: Comparison value
    ProcessRule:
      type: object
      required:
        - mode
      properties:
        mode:
          type: string
          enum:
            - automatic
            - custom
          description: Cleaning and segmentation mode
        rules:
          type: object
          properties:
            pre_processing_rules:
              type: array
              items:
                type: object
                description: Pre-processing rules list
                properties:
                  id:
                    type: string
                    description: Unique identifier for preprocessing rule
                  enabled:
                    type: boolean
                    description: Whether this rule is selected
                  name:
                    type: string
                    description: Rule name
              description: Pre-processing rules
            segmentation:
              type: object
              description: Segmentation configuration
              properties:
                separator:
                  type: string
                  description: Custom segmentation identifier
                max_tokens:
                  type: integer
                  description: Maximum length (tokens)
                chunk_overlap:
                  type: integer
                  description: Segment overlap
          description: Custom rules (empty for automatic mode)
    Document:
      type: object
      properties:
        id:
          type: string
          description: Document ID
        dataset_id:
          type: string
          description: Associated knowledge base ID
        name:
          type: string
          description: Document name
        data_source_type:
          type: string
          nullable: true
          description: Data source type
        display_status:
          type: string
          enum:
            - indexing
            - index_failed
            - indexed
            - cleaning
            - clean_failed
            - cleaned
            - parsing
            - parse_failed
            - parsed
            - splitting
            - split_failed
            - splitted
            - embedding
            - embedding_failed
            - embedded
          description: Display status
        enabled:
          type: boolean
          description: Whether enabled
        word_count:
          type: integer
          description: Word count
        segment_count:
          type: integer
          nullable: true
          description: Number of segments
        created_from:
          type: string
          description: Created from
        created_by:
          type: string
          description: Creator ID
        created_at:
          type: number
          description: Creation timestamp
        updated_at:
          type: number
          description: Last updated timestamp
        archived:
          type: boolean
          description: Whether archived
        batch:
          type: string
          nullable: true
          description: Batch number
        hit_count:
          type: integer
          description: Hit count
    Segment:
      type: object
      properties:
        id:
          type: string
          description: Segment ID
        position:
          type: integer
          description: Position
        document_id:
          type: string
          description: Document ID
        content:
          type: string
          description: Content
        answer:
          type: string
          nullable: true
          description: Answer
        word_count:
          type: integer
          description: Word count
        tokens:
          type: integer
          description: Token count
        keywords:
          type: array
          items:
            type: string
          description: Keywords
        index_node_id:
          type: string
          description: Index node ID
        index_node_hash:
          type: string
          description: Index node hash
        hit_count:
          type: integer
          description: Hit count
        enabled:
          type: boolean
          description: Whether enabled
        disabled_at:
          type: number
          nullable: true
          description: Disabled timestamp
        disabled_by:
          type: string
          nullable: true
          description: Disabled by user ID
        status:
          type: string
          description: Status
        created_by:
          type: string
          description: Creator ID
        created_at:
          type: number
          nullable: true
          description: Creation timestamp
        indexing_at:
          type: number
          nullable: true
          description: Indexing timestamp
        completed_at:
          type: number
          nullable: true
          description: Completion timestamp
        error:
          type: string
          nullable: true
          description: Error message
        stopped_at:
          type: number
          nullable: true
          description: Stop timestamp
    ChildChunk:
      type: object
      properties:
        id:
          type: string
          description: Child segment ID
        segment_id:
          type: string
          description: Parent segment ID
        content:
          type: string
          description: Child segment content
        word_count:
          type: integer
          description: Word count
        tokens:
          type: integer
          description: Token count
        index_node_id:
          type: string
          description: Index node ID
        index_node_hash:
          type: string
          description: Index node hash
        status:
          type: string
          description: Status
        created_by:
          type: string
          description: Creator
        created_at:
          type: number
          description: Creation timestamp
        indexing_at:
          type: number
          description: Indexing timestamp
        completed_at:
          type: number
          description: Completion timestamp
        error:
          type: string
          nullable: true
          description: Error message
        stopped_at:
          type: number
          nullable: true
          description: Stop timestamp
    EmbeddingModel:
      type: object
      properties:
        provider:
          type: string
          description: Model provider
        label:
          type: object
          properties:
            zh_Hans:
              type: string
              description: Chinese label
            en_US:
              type: string
              description: English label
          description: Model label
        icon_small:
          type: object
          properties:
            zh_Hans:
              type: string
              description: Chinese small icon
            en_US:
              type: string
              description: English small icon
          description: Small icon
        icon_large:
          type: object
          properties:
            zh_Hans:
              type: string
              description: Chinese large icon
            en_US:
              type: string
              description: English large icon
          description: Large icon
        status:
          type: string
          description: Status
        models:
          type: array
          description: Model list
          items:
            type: object
            properties:
              model:
                type: string
                description: Model name
              label:
                type: object
                properties:
                  zh_Hans:
                    type: string
                    description: Chinese label
                  en_US:
                    type: string
                    description: English label
                description: Model label
              model_type:
                type: string
                description: Model type
              features:
                type: object
                nullable: true
                description: Features
              fetch_from:
                type: string
                description: Fetch source
              model_properties:
                type: object
                description: Model properties
                properties:
                  context_size:
                    type: integer
                    description: Context size
              deprecated:
                type: boolean
                description: Whether deprecated
              status:
                type: string
                description: Status
              load_balancing_enabled:
                type: boolean
                description: Whether load balancing is enabled
    UploadFile:
      type: object
      properties:
        id:
          type: string
          description: File ID
        name:
          type: string
          description: File name
        size:
          type: integer
          description: File size
        extension:
          type: string
          description: File extension
        url:
          type: string
          description: Preview URL
        download_url:
          type: string
          description: Download URL
        mime_type:
          type: string
          description: MIME type
        created_by:
          type: string
          description: Creator ID
        created_at:
          type: number
          description: Creation timestamp
    CreateDocumentByFileRequestData:
      example: |
        {"indexing_technique":"high_quality","process_rule":{"rules":{"pre_processing_rules":[{"id":"remove_extra_spaces","enabled":true},{"id":"remove_urls_emails","enabled":true}],"segmentation":{"separator":"###","max_tokens":500}},"mode":"custom"}}
      type: object
      description: |
        Document configuration information in JSON string format, including the following fields:
        - original_document_id: Source document ID (optional), used for re-uploading or modifying document configuration
        - indexing_technique: Indexing method (high_quality/economy)
        - doc_form: Indexing content form (text_model/hierarchical_model/qa_model)
        - doc_language: Document language (required for Q&A mode)
        - process_rule: Processing rules
      properties:
        original_document_id:
          type: string
          description: 'Source document ID, used for re-uploading or modifying document configuration'
        indexing_technique:
          type: string
          enum:
            - high_quality
            - economy
          description: Indexing technique
        doc_form:
          type: string
          enum:
            - text_model
            - hierarchical_model
            - qa_model
          description: Document form
        doc_language:
          type: string
          description: Document language (required for Q&A mode)
        process_rule:
          $ref: '#/components/schemas/ProcessRule'
          description: Processing rules
        retrieval_model:
          $ref: '#/components/schemas/RetrievalModel'
          description: Retrieval model configuration
        embedding_model:
          type: string
          description: Embedding model name
        embedding_model_provider:
          type: string
          description: Embedding model provider
    UploadDocument:
      type: object
      properties:
        data_source:
          type: object
          properties:
            type:
              type: string
              enum:
                - upload_file
                - notion_import
                - notion_sync
                - web_page
                - web_site
                - notion_page
                - github_repository
              description: |
                Document source type
                - upload_file: Upload file
                - notion_import: Notion import
                - notion_sync: Notion sync
                - web_page: Web page
                - web_site: Website
                - notion_page: Notion page
                - github_repository: GitHub repository
                Required, default: upload_file
            info_list:
              type: array
              items:
                type: object
                properties:
                  file_id:
                    type: string
                    description: File ID
    DocumentSegment:
      type: object
      properties:
        id:
          type: string
          description: Segment ID
        document_id:
          type: string
          description: Document ID
        content:
          type: string
          description: Segment content
        answer:
          type: string
          nullable: true
          description: Answer (if mode is Q&A)
        word_count:
          type: integer
          description: Word count
        vector:
          type: array
          nullable: true
          items:
            type: number
            format: float
          description: Vector data
        created_by:
          type: string
          description: Creator
        created_at:
          type: number
          description: Creation timestamp
        updated_by:
          type: string
          description: Last updated by
        updated_at:
          type: number
          description: Last updated timestamp
        status:
          type: string
          enum:
            - waiting
            - completed
            - error
            - processing
          description: Segment status
        indexing_at:
          type: number
          nullable: true
          description: Indexing timestamp
        completed_at:
          type: number
          nullable: true
          description: Completion timestamp
        position:
          type: integer
          description: Position
    KnowledgeTag:
      type: object
      properties:
        id:
          type: string
          description: Tag ID
        name:
          type: string
          description: Tag name
        type:
          type: string
          enum:
            - knowledge
          description: Tag type
        binding_count:
          type: integer
          description: Binding count
  responses:
    Error400:
      description: Request parameter error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            no_file_uploaded:
              value:
                code: no_file_uploaded
                status: 400
                message: Please upload your file.
            too_many_files:
              value:
                code: too_many_files
                status: 400
                message: Only one file is allowed.
            dataset_not_initialized:
              value:
                code: dataset_not_initialized
                status: 400
                message: The dataset is still being initialized or indexing. Please wait a moment.
            high_quality_dataset_only:
              value:
                code: high_quality_dataset_only
                status: 400
                message: Current operation only supports 'high-quality' datasets.
            document_already_finished:
              value:
                code: document_already_finished
                status: 400
                message: The document has been processed. Please refresh the page or go to the document details.
            document_indexing:
              value:
                code: document_indexing
                status: 400
                message: The document is being processed and cannot be edited.
            invalid_metadata:
              value:
                code: invalid_metadata
                status: 400
                message: The metadata content is incorrect. Please check and verify.
    Error403:
      description: Permission error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            archived_document_immutable:
              value:
                code: archived_document_immutable
                status: 403
                message: The archived document is not editable.
    Error409:
      description: Resource conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            dataset_name_duplicate:
              value:
                code: dataset_name_duplicate
                status: 409
                message: The dataset name already exists. Please modify your dataset name.
    Error413:
      description: Request entity too large
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            file_too_large:
              value:
                code: file_too_large
                status: 413
                message: File size exceeded.
    Error415:
      description: Unsupported media type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            unsupported_file_type:
              value:
                code: unsupported_file_type
                status: 415
                message: File type not allowed.
paths:
  /datasets:
    post:
      summary: Create Empty Knowledge Base
      description: Create a new empty knowledge base
      operationId: createEmptyDataset
      tags:
        - Datasets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetRequest'
      responses:
        '200':
          description: Successfully created knowledge base
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '400':
          $ref: '#/components/responses/Error400'
        '409':
          $ref: '#/components/responses/Error409'
    get:
      summary: Get Knowledge Base List
      description: Get a list of all knowledge bases
      operationId: getDatasetList
      tags:
        - Datasets
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: Successfully retrieved knowledge base list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetList'
        '400':
          $ref: '#/components/responses/Error400'
  '/datasets/{dataset_id}':
    get:
      summary: View Knowledge Base Details
      description: Get detailed information about a specific knowledge base
      tags:
        - Datasets
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved knowledge base details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
    patch:
      summary: Update Knowledge Base Details
      description: Modify details of a specific knowledge base
      tags:
        - Datasets
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Knowledge Base name (optional)
                indexing_technique:
                  type: string
                  enum:
                    - high_quality
                    - economy
                  description: |
                    Indexing mode (optional, recommended)
                    - high_quality: High quality
                    - economy: Economy
                permission:
                  type: string
                  enum:
                    - only_me
                    - all_team_members
                    - partial_members
                  description: |
                    Permission (optional, default only_me)
                    - only_me: Only me
                    - all_team_members: All team members
                    - partial_members: Partial team members
                embedding_model_provider:
                  type: string
                  description: 'Embedding model provider (optional), must be configured in the system first, corresponds to the provider field'
                embedding_model:
                  type: string
                  description: Embedding model (optional)
                retrieval_model:
                  type: string
                  description: Retrieval model (optional)
                partial_member_list:
                  type: array
                  description: Partial team members ID list (optional)
                  items:
                    type: string
      responses:
        '200':
          description: Successfully updated knowledge base details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
    delete:
      summary: Delete Knowledge Base
      description: Delete specified knowledge base
      operationId: deleteDataset
      tags:
        - Datasets
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted knowledge base
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
  '/datasets/{dataset_id}/document/create-by-text':
    post:
      summary: Create Document by Text
      description: Create a new document from text based on existing knowledge base
      operationId: createDocumentByText
      tags:
        - Documents
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - text
                - indexing_technique
                - process_rule
              properties:
                name:
                  type: string
                  description: Document name
                text:
                  type: string
                  description: Document content
                indexing_technique:
                  type: string
                  enum:
                    - high_quality
                    - economy
                  description: Indexing technique
                doc_form:
                  type: string
                  enum:
                    - text_model
                    - hierarchical_model
                    - qa_model
                  description: Document form
                doc_language:
                  type: string
                  description: Document language (required for Q&A mode)
                process_rule:
                  $ref: '#/components/schemas/ProcessRule'
      responses:
        '200':
          description: Successfully created document
          content:
            application/json:
              schema:
                type: object
                properties:
                  document:
                    $ref: '#/components/schemas/Document'
                  batch:
                    type: string
        '400':
          $ref: '#/components/responses/Error400'
        '413':
          $ref: '#/components/responses/Error413'
        '415':
          $ref: '#/components/responses/Error415'
  '/datasets/{dataset_id}/document/create-by-file':
    post:
      summary: Create Document by File
      description: Create a new document from file based on existing knowledge base
      operationId: createDocumentByFile
      tags:
        - Documents
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                data:
                  # type: object
                  # NOTE: `format: json` maybe not force to impl in many sdks , use `type: string` get more compatible with some sdk, if your generator can handle this, please use `type: object` for better type checking and completion
                  type: string
                  format: json
                  description: 'Document configuration information in JSON string format, see CreateDocumentByFileRequestData schema for details' #/components/schemas/CreateDocumentByFileRequestData
                file:
                  type: string
                  format: binary
                  description: File to be uploaded
      responses:
        '200':
          description: Successfully created document
          content:
            application/json:
              schema:
                type: object
                properties:
                  document:
                    $ref: '#/components/schemas/Document'
                  batch:
                    type: string
                    description: Document batch number
        '400':
          $ref: '#/components/responses/Error400'
        '413':
          $ref: '#/components/responses/Error413'
        '415':
          $ref: '#/components/responses/Error415'
  '/datasets/{dataset_id}/documents/{document_id}/update-by-text':
    post:
      summary: Update Document by Text
      description: Update existing document using text
      operationId: updateDocumentByText
      tags:
        - Documents
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          description: Document ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Document name
                text:
                  type: string
                  description: Document content
                indexing_technique:
                  type: string
                  enum:
                    - high_quality
                    - economy
                  description: Indexing technique
                doc_form:
                  type: string
                  enum:
                    - text_model
                    - hierarchical_model
                    - qa_model
                  description: Document form
                doc_language:
                  type: string
                  description: Document language (required for Q&A mode)
                process_rule:
                  required: true
                  $ref: '#/components/schemas/ProcessRule'
                  description: Processing rules
      responses:
        '200':
          description: Successfully updated document
          content:
            application/json:
              schema:
                type: object
                properties:
                  document:
                    $ref: '#/components/schemas/Document'
                  batch:
                    type: string
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
  '/datasets/{dataset_id}/documents/{document_id}/update-by-file':
    post: # TODO: (E001) 接口有bug, https://github.com/langgenius/dify/pull/14243
      summary: Update Document by File
      description: Update existing document using file
      operationId: updateDocumentByFile
      tags:
        - Documents
        - Documents
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          description: Document ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                name:
                  type: string
                  description: Document name
                file:
                  type: string
                  format: binary
                  description: File to be uploaded
                process_rule:
                  $ref: '#/components/schemas/ProcessRule'
      responses:
        '200':
          description: Successfully updated document
          content:
            application/json:
              schema:
                type: object
                properties:
                  document:
                    $ref: '#/components/schemas/Document'
                  batch:
                    type: string
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
        '413':
          $ref: '#/components/responses/Error413'
        '415':
          $ref: '#/components/responses/Error415'
  '/datasets/{dataset_id}/documents/{batch}/indexing-status':
    get:
      summary: Get Document Embedding Status
      description: Get document processing and indexing progress status
      operationId: getDocumentIndexingStatus
      tags:
        - Documents
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: batch
          in: path
          description: Document batch number
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved indexing status
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        indexing_status:
                          type: string
                        processing_started_at:
                          type: number
                          format: float
                        parsing_completed_at:
                          type: number
                          format: float
                        cleaning_completed_at:
                          type: number
                          format: float
                        splitting_completed_at:
                          type: number
                          format: float
                        completed_at:
                          type: number
                          format: float
                          nullable: true
                        paused_at:
                          type: number
                          format: float
                          nullable: true
                        error:
                          type: string
                          nullable: true
                        stopped_at:
                          type: number
                          format: float
                          nullable: true
                        completed_segments:
                          type: integer
                        total_segments:
                          type: integer
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
  '/datasets/{dataset_id}/documents':
    get:
      summary: Get Knowledge Base Document List
      description: Get a list of all documents in the specified knowledge base
      operationId: getDocumentList
      tags:
        - Documents
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: keyword
          in: query
          description: Search keyword
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Items per page
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: Successfully retrieved document list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Document'
                  has_more:
                    type: boolean
                  limit:
                    type: integer
                  total:
                    type: integer
                  page:
                    type: integer
        '400':
          $ref: '#/components/responses/Error400'
  '/datasets/{dataset_id}/documents/{document_id}':
    delete:
      summary: Delete Document
      description: Delete specified document
      operationId: deleteDocument
      tags:
        - Documents
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          description: Document ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted document
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
  '/datasets/{dataset_id}/documents/status/{action}':
    patch:
      summary: Update Document Status
      description: Batch update the status of documents in the specified knowledge base
      operationId: batchUpdateDocumentStatus
      tags:
        - Documents
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: action
          in: path
          description: Action to perform
          required: true
          schema:
            type: string
            enum:
              - enable
              - disable
              - archive
              - un_archive
            description: |
              Action type:
              - enable: Enable documents
              - disable: Disable documents
              - archive: Archive documents
              - un_archive: Unarchive documents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - document_ids
              properties:
                document_ids:
                  type: array
                  items:
                    type: string
                  description: List of document IDs
                  minItems: 1
                  example:
                    - doc-id-1
                    - doc-id-2
      responses:
        '200':
          description: Successfully updated document status
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: success
                    description: Operation result
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
  '/datasets/{dataset_id}/documents/{document_id}/segments':
    post:
      summary: Add Segment
      description: Add a new segment to specified document
      operationId: createSegments
      tags:
        - Segments
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          description: Document ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - segments
              properties:
                segments:
                  type: array
                  items:
                    type: object
                    required:
                      - content
                    properties:
                      content:
                        type: string
                        description: Text content/question content
                      answer:
                        type: string
                        description: 'Answer content, optional, required if knowledge base is in Q&A mode'
                      keywords:
                        type: array
                        items:
                          type: string
                        description: 'Keyword list, optional'
      responses:
        '200':
          description: Successfully created segment
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Segment'
                  doc_form:
                    type: string
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
    get:
      summary: Query Document Segments
      description: Get all segments of specified document
      operationId: getSegments
      tags:
        - Segments
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          description: Document ID
          required: true
          schema:
            type: string
        - name: keyword
          in: query
          description: Search keyword
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Segment status
          required: false
          schema:
            type: string
            enum:
              - completed
        - name: page
          in: query
          description: Page numbers
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Items per page
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: Successfully retrieved segment list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Segment'
                  doc_form:
                    type: string
                  has_more:
                    type: boolean
                  limit:
                    type: integer
                  total:
                    type: integer
                  page:
                    type: integer
        '400':
          $ref: '#/components/responses/Error400'
  '/datasets/{dataset_id}/documents/{document_id}/segments/{segment_id}/child_chunks':
    post:
      summary: Create Document Child Segment
      description: Add a new child segment to a specified segment
      tags:
        - Segments
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          description: Document ID
          required: true
          schema:
            type: string
        - name: segment_id
          in: path
          description: Segment ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: Child segment content
      responses:
        '200':
          description: Successfully created child segment
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ChildChunk'
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
    get:
      summary: Query Document Child Segments
      description: Get all child segments of a specified segment
      tags:
        - Segments
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          description: Document ID
          required: true
          schema:
            type: string
        - name: segment_id
          in: path
          description: Segment ID
          required: true
          schema:
            type: string
        - name: keyword
          in: query
          description: Search keyword (optional)
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: 'Page number (optional, default 1)'
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: 'Items per page (optional, default 20, max 100)'
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: Successfully retrieved child segment list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChildChunk'
                  total:
                    type: integer
                    description: Total record count
                  total_pages:
                    type: integer
                    description: Total pages
                  page:
                    type: integer
                    description: Current page number
                  limit:
                    type: integer
                    description: Items per page
        '400':
          $ref: '#/components/responses/Error400'
  '/datasets/{dataset_id}/documents/{document_id}/segments/{segment_id}/child_chunks/{child_chunk_id}':
    delete:
      summary: Delete Document Child Segment
      description: Delete a specified document child segment
      tags:
        - Segments
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          description: Document ID
          required: true
          schema:
            type: string
        - name: segment_id
          in: path
          description: Segment ID
          required: true
          schema:
            type: string
        - name: child_chunk_id
          in: path
          description: Child Segment ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted child segment
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
    patch:
      summary: Update Document Child Segment
      description: Update a specified document child segment
      tags:
        - Segments
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          description: Document ID
          required: true
          schema:
            type: string
        - name: segment_id
          in: path
          description: Segment ID
          required: true
          schema:
            type: string
        - name: child_chunk_id
          in: path
          description: Child Segment ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: Child segment content
      responses:
        '200':
          description: Successfully updated child segment
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ChildChunk'
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
  '/datasets/{dataset_id}/documents/{document_id}/segments/{segment_id}':
    get:
      summary: View Document Segment Detail
      description: View the details of a specific document segment in the specified knowledge base
      operationId: getSegmentDetail
      tags:
        - Segments
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          description: Document ID
          required: true
          schema:
            type: string
        - name: segment_id
          in: path
          description: Segment ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved segment details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Segment'
                      - type: object
                        properties:
                          sign_content:
                            type: string
                            description: Signature content
                          child_chunks:
                            type: array
                            description: Child segment list
                            items:
                              $ref: '#/components/schemas/ChildChunk'
                  doc_form:
                    type: string
                    description: Document form
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
    delete:
      summary: Delete Document Segment
      description: Delete specified document segment
      operationId: deleteSegment
      tags:
        - Segments
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          description: Document ID
          required: true
          schema:
            type: string
        - name: segment_id
          in: path
          description: Segment ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted segment
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
    post:
      summary: Update Document Segment
      description: Update specified document segment
      operationId: updateSegment
      tags:
        - Segments
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          description: Document ID
          required: true
          schema:
            type: string
        - name: segment_id
          in: path
          description: Segment ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - segment
              properties:
                segment:
                  type: object
                  properties:
                    content:
                      type: string
                      description: Text content/question content
                    answer:
                      type: string
                      description: Answer content (required for Q&A mode)
                    keywords:
                      type: array
                      items:
                        type: string
                      description: Keyword list
                    enabled:
                      type: boolean
                      description: Whether enabled
                    regenerate_child_chunks:
                      type: boolean
                      description: Whether to regenerate child segments
      responses:
        '200':
          description: Successfully updated segment
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Segment'
                  doc_form:
                    type: string
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
  '/datasets/{dataset_id}/documents/{document_id}/upload-file':
    get:
      summary: Get Upload File
      description: Get upload file information of specified document
      operationId: getUploadFile
      tags:
        - Documents
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          description: Document ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved file information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFile'
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
  '/datasets/{dataset_id}/retrieve':
    post:
      summary: Retrieve Knowledge Base
      description: Retrieve relevant content from the specified knowledge base
      operationId: retrieveDataset
      tags:
        - Datasets
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: Search keywords
                retrieval_model:
                  $ref: '#/components/schemas/RetrievalModel'
                  description: Retrieval parameter configuration
                external_retrieval_model:
                  type: object
                  description: External retrieval model (disabled field)
      responses:
        '200':
          description: Successfully retrieved knowledge base
          content:
            application/json:
              schema:
                type: object
                properties:
                  query:
                    type: object
                    properties:
                      content:
                        type: string
                        description: Query content
                  records:
                    type: array
                    description: Search result list
                    items:
                      type: object
                      properties:
                        segment:
                          allOf:
                            - $ref: '#/components/schemas/Segment'
                            - type: object
                              properties:
                                document:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      description: Document ID
                                    data_source_type:
                                      type: string
                                      description: Data source type
                                    name:
                                      type: string
                                      description: Document name
                        score:
                          type: number
                          format: float
                          description: Relevance score
                        tsne_position:
                          type: array
                          nullable: true
                          description: t-SNE position
                          items:
                            type: number
        '400':
          $ref: '#/components/responses/Error400'
        '403':
          $ref: '#/components/responses/Error403'
  '/datasets/{dataset_id}/metadata':
    post:
      tags:
        - Metadata
      summary: Create Metadata
      description: Add a new metadata field to the knowledge base
      operationId: createMetadata
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - name
              properties:
                type:
                  type: string
                  description: 'Metadata type, e.g. string'
                name:
                  type: string
                  description: Metadata name
      responses:
        '200':
          description: Successfully created metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Metadata ID
                  type:
                    type: string
                    description: Metadata type
                  name:
                    type: string
                    description: Metadata name
        '400':
          $ref: '#/components/responses/Error400'
    get:
      tags:
        - Metadata
      summary: List Dataset Metadata
      description: Get list of all metadata fields for a knowledge base
      operationId: listDatasetMetadata
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved metadata list
          content:
            application/json:
              schema:
                type: object
                properties:
                  doc_metadata:
                    type: array
                    description: Metadata list
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Metadata ID
                        name:
                          type: string
                          description: Metadata name
                        type:
                          type: string
                          description: Metadata type
                        use_count:
                          type: integer
                          description: Usage count
                  built_in_field_enabled:
                    type: boolean
                    description: Whether built-in fields are enabled
        '400':
          $ref: '#/components/responses/Error400'
  /workspaces/current/models/model-types/text-embedding:
    get:
      summary: Get Embedding Model List
      description: Get a list of available embedding models for the current workspace
      operationId: getEmbeddingModels
      tags:
        - Models
      responses:
        '200':
          description: Successfully retrieved embedding model list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Embedding model list
                    items:
                      $ref: '#/components/schemas/EmbeddingModel'
        '400':
          $ref: '#/components/responses/Error400'
  '/datasets/{dataset_id}/metadata/{metadata_id}':
    patch:
      tags:
        - Metadata
      summary: Update Metadata
      description: Update an existing metadata field
      operationId: updateMetadata
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: metadata_id
          in: path
          description: Metadata ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: New metadata name
      responses:
        '200':
          description: Successfully updated metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Metadata ID
                  type:
                    type: string
                    description: Metadata type
                  name:
                    type: string
                    description: Metadata name
        '400':
          $ref: '#/components/responses/Error400'
    delete:
      tags:
        - Metadata
      summary: Delete Metadata
      description: Delete a metadata field
      operationId: deleteMetadata
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: metadata_id
          in: path
          description: Metadata ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted metadata
        '400':
          $ref: '#/components/responses/Error400'
  '/datasets/{dataset_id}/metadata/built-in/{action}':
    post:
      tags:
        - Metadata
      summary: Enable/Disable Built-in Metadata
      description: Enable or disable built-in metadata fields for a knowledge base
      operationId: toggleBuiltInMetadata
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
        - name: action
          in: path
          description: 'Action type, enable or disable'
          required: true
          schema:
            type: string
            enum:
              - enable
              - disable
      responses:
        '204':
          description: Successfully enabled/disabled built-in metadata
        '400':
          $ref: '#/components/responses/Error400'
  '/datasets/{dataset_id}/documents/metadata':
    post:
      tags:
        - Metadata
      summary: Update Document Metadata
      description: Update metadata for multiple documents in batch
      operationId: updateDocumentsMetadata
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - operation_data
              properties:
                operation_data:
                  type: array
                  description: List of document metadata operations
                  items:
                    type: object
                    required:
                      - document_id
                      - metadata_list
                    properties:
                      document_id:
                        type: string
                        description: Document ID
                      metadata_list:
                        type: array
                        description: List of metadata to update
                        items:
                          type: object
                          required:
                            - id
                            - value
                          properties:
                            id:
                              type: string
                              description: Metadata ID
                            type:
                              type: string
                              description: Metadata type
                            value:
                              type: string
                              description: Metadata value
                            name:
                              type: string
                              description: Metadata name
      responses:
        '204':
          description: Successfully updated document metadata
        '400':
          $ref: '#/components/responses/Error400'
  /datasets/tags:
    post:
      summary: Create Knowledge Base Tag
      description: Create a new knowledge base tag
      operationId: createKnowledgeTag
      tags:
        - Tags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  maxLength: 50
                  description: 'Tag name, required, maximum length 50'
      responses:
        '200':
          description: Successfully created tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeTag'
        '400':
          $ref: '#/components/responses/Error400'
    get:
      summary: Get Knowledge Base Tags
      description: Get all knowledge base tag list
      operationId: getKnowledgeTags
      tags:
        - Tags
      responses:
        '200':
          description: Successfully retrieved tag list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeTag'
        '400':
          $ref: '#/components/responses/Error400'
    patch:
      summary: Update Knowledge Base Tag Name
      description: Update the name of the specified knowledge base tag
      operationId: updateKnowledgeTag
      tags:
        - Tags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - tag_id
              properties:
                name:
                  type: string
                  maxLength: 50
                  description: 'Updated tag name, required, maximum length 50'
                tag_id:
                  type: string
                  description: 'Tag ID, required'
      responses:
        '200':
          description: Successfully updated tag name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeTag'
        '400':
          $ref: '#/components/responses/Error400'
  /datasets/tags/binding:
    post:
      summary: Bind Knowledge Base to Tag
      description: Bind knowledge base to specified knowledge base tags
      operationId: bindDatasetToTag
      tags:
        - Tags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tag_ids
                - target_id
              properties:
                tag_ids:
                  type: array
                  description: 'Tag ID list, required'
                  items:
                    type: string
                target_id:
                  type: string
                  description: 'Knowledge Base ID, required'
      responses:
        '204':
          description: Successfully bound knowledge base to tags
        '400':
          $ref: '#/components/responses/Error400'
  /datasets/tags/unbinding:
    post:
      summary: Unbind Knowledge Base from Tag
      description: Remove the binding relationship between knowledge base and specified tag
      operationId: unbindDatasetFromTag
      tags:
        - Tags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tag_id
                - target_id
              properties:
                tag_id:
                  type: string
                  description: 'Tag ID, required'
                target_id:
                  type: string
                  description: 'Knowledge Base ID, required'
      responses:
        '204':
          description: Successfully unbound knowledge base from tag
        '400':
          $ref: '#/components/responses/Error400'
  '/datasets/{dataset_id}/tags':
    get:
      summary: Query Knowledge Base Bound Tags
      description: Get all tags bound to the specified knowledge base
      operationId: getDatasetTags
      tags:
        - Tags
      parameters:
        - name: dataset_id
          in: path
          description: Knowledge Base ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved knowledge base bound tag list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Tag ID
                        name:
                          type: string
                          description: Tag name
                  total:
                    type: integer
                    description: Total count
        '400':
          $ref: '#/components/responses/Error400'
